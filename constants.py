# code to be emulated
X86_CODE64 = b"\x48\x89\xe5\xbf\x0a\x00\x00\x00\xe8\x24\x00\x00\x00\x48\x89\x45\xf8\xbf\x18\x00\x00\x00\xe8\x16\x00\x00\x00\x48\x89\x45\xf0\xbf\x24\x00\x00\x00\xe8\x08\x00\x00\x00\x48\x89\x45\xe8\xbf\x19\x00\x00\x00\xe8\xfa\xff\xff\xff\x48\x89\x45\xe0\x48\x8b\x45\xe0\x48\x89\xc7\xe8\xdc\xff\xff\xff\x48\x89\x45\xe0\xbf\x14\x00\x00\x00\xe8\xdc\xff\xff\xff\x48\x89\x45\xd8\x48\x8b\x45\xf8\x48\x8b\x5d\xf0\x48\x8b\x4d\xe8\x48\x8b\x55\xe0\x4c\x8b\x55\xd8"

# memory address for the code
CODE_ADDRESS = 0x400000
SIZE_MB = 1024 * 1024

# memory address for stack and heap
STACK_ADDRESS = 0x0
STACK_SIZE = 4 * SIZE_MB

# heap constant
HEAP_ADDRESS = 0x600000
HEAP_SIZE = 100

# malloc() instructions addresses
MALLOC_ADDRESSES = [0x400008, 0x400016, 0x400024, 0x400032, 0x400050]

# free() instructions addresses
FREE_ADDRESSES = [0x400042]

# screen values
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 900